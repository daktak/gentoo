--- post-processing/autoProcessComics.py	2014-10-22 13:47:59.587399724 +1100
+++ post-processing/autoProcessComics.py	2014-10-22 13:42:54.281391002 +1100
@@ -1,14 +1,14 @@
 import sys
-import urllib
+import urllib.request, urllib.parse, urllib.error
 import os.path
-import ConfigParser
+import configparser
 
-class AuthURLOpener(urllib.FancyURLopener):
+class AuthURLOpener(urllib.request.FancyURLopener):
     def __init__(self, user, pw):
         self.username = user
         self.password = pw
         self.numTries = 0
-        urllib.FancyURLopener.__init__(self)
+        urllib.request.FancyURLopener.__init__(self)
     
     def prompt_user_passwd(self, host, realm):
         if self.numTries == 0:
@@ -19,25 +19,25 @@
 
     def openit(self, url):
         self.numTries = 0
-        return urllib.FancyURLopener.open(self, url)
+        return urllib.request.FancyURLopener.open(self, url)
 
 
-def processIssue(dirName, nzbName=None, failed=False):
+def processEpisode(dirName, nzbName=None):
 
-    config = ConfigParser.ConfigParser()
+    config = configparser.ConfigParser()
     configFilename = os.path.join(os.path.dirname(sys.argv[0]), "autoProcessComics.cfg")
-    print "Loading config from", configFilename
+    print("Loading config from "+configFilename)
     
     if not os.path.isfile(configFilename):
-        print "ERROR: You need an autoProcessComics.cfg file - did you rename and edit the .sample?"
+        print ("ERROR: You need an autoProcessComics.cfg file - did you rename and edit the .sample?")
         sys.exit(-1)
     
     try:
         fp = open(configFilename, "r")
         config.readfp(fp)
         fp.close()
-    except IOError, e:
-        print "Could not read configuration file: ", str(e)
+    except (IOError) as e:
+        print("Could not read configuration file: "+ str(e))
         sys.exit(1)
     
     host = config.get("Mylar", "host")
@@ -46,12 +46,12 @@
     password = config.get("Mylar", "password")
     try:
         ssl = int(config.get("Mylar", "ssl"))
-    except (ConfigParser.NoOptionError, ValueError):
+    except (configparser.NoOptionError, ValueError):
         ssl = 0
     
     try:
         web_root = config.get("Mylar", "web_root")
-    except ConfigParser.NoOptionError:
+    except configparser.NoOptionError:
         web_root = ""
     
     params = {}
@@ -59,8 +59,6 @@
     params['nzb_folder'] = dirName
     if nzbName != None:
         params['nzb_name'] = nzbName
-
-    params['failed'] = failed
         
     myOpener = AuthURLOpener(username, password)
     
@@ -69,21 +67,21 @@
     else:
         protocol = "http://"
 
-    url = protocol + host + ":" + port + web_root + "/post_process?" + urllib.urlencode(params)
+    url = protocol + host + ":" + port + web_root + "/post_process?" + urllib.parse.urlencode(params)
     
-    print "Opening URL:", url
+    print("Opening URL:"+ url)
     
     try:
         urlObj = myOpener.openit(url)
-    except IOError, e:
-        print "Unable to open URL: ", str(e)
+    except (IOError) as e:
+        print("Unable to open URL: "+ str(e))
         sys.exit(1)
     
     result = urlObj.readlines()
     for line in result:
-        print line
+        print (str(line,encoding='utf8' ))
 
-    if any("Post Processing SUCCESSFUL" in s for s in result):
+    if any("Post Processing SUCCESSFULL" in str(s,encoding='utf8' ) for s in result):
         return 0
     else:
         return 1
--- post-processing/sabnzbd/ComicRN.py	2014-10-22 13:47:59.609399725 +1100
+++ post-processing/sabnzbd/ComicRN.py	2014-10-22 13:54:12.615410382 +1100
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 #
 ##############################################################################
 ### SABNZBD POST-PROCESSING SCRIPT                                         ###
@@ -14,7 +14,7 @@
 
 #the code.
 if len(sys.argv) < 2:
-    print "No folder supplied - is this being called from SABnzbd or NZBGet?"
+    print ( "No folder supplied - is this being called from SABnzbd or NZBGet?" )
     sys.exit()
 elif len(sys.argv) >= 3:
     sys.exit(autoProcessComics.processIssue(sys.argv[1], sys.argv[3], sys.argv[7]))
