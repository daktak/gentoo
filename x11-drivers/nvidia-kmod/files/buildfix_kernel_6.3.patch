--- a/kernel/nv-mmap.c	2023-05-03 11:48:48.481814709 +0200
+++ b/kernel/nv-mmap.c	2023-05-03 11:51:39.220313386 +0200
@@ -312,7 +312,11 @@
             goto done;
         }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)
+        vm_flags_set(vma, VM_IO);
+#else
         vma->vm_flags |= VM_IO;
+#endif
     }
     else
     {
@@ -363,8 +367,13 @@
 
         NV_PRINT_AT(NV_DBG_MEMINFO, at);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)
+        vm_flags_set(vma, VM_IO | VM_LOCKED | VM_RESERVED);
+        vm_flags_set(vma, VM_DONTEXPAND | VM_DONTDUMP);
+#else
         vma->vm_flags |= (VM_IO | VM_LOCKED | VM_RESERVED);
         vma->vm_flags |= (VM_DONTEXPAND | VM_DONTDUMP);
+#endif
     }
 
     if (status == 0)
@@ -374,8 +383,13 @@
         if ((prot & NV_PROTECT_WRITEABLE) == 0)
         {
             vma->vm_page_prot = NV_PGPROT_READ_ONLY(vma->vm_page_prot);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)
+            vm_flags_clear(vma, VM_WRITE);
+            vm_flags_clear(vma, VM_MAYWRITE);
+#else
             vma->vm_flags &= ~VM_WRITE;
             vma->vm_flags &= ~VM_MAYWRITE;
+#endif
         }
 
         vma->vm_ops = &nv_vm_ops;
